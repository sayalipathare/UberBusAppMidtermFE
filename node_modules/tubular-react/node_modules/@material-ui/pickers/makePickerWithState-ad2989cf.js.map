{"version":3,"file":"makePickerWithState-ad2989cf.js","sources":["../src/_shared/PureDateInput.tsx","../src/_shared/PickersModalDialog.tsx","../src/wrappers/MobileWrapper.tsx","../src/_shared/PickersPopper.tsx","../src/wrappers/DesktopWrapper.tsx","../src/wrappers/DesktopTooltipWrapper.tsx","../src/wrappers/ResponsiveWrapper.tsx","../src/wrappers/StaticWrapper.tsx","../src/_shared/hooks/useValidation.ts","../src/_shared/withDateAdapterProp.tsx","../src/wrappers/makeWrapperComponent.tsx","../src/_shared/hooks/useOpenState.ts","../src/_shared/hooks/usePickerState.ts","../src/Picker/makePickerWithState.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport { IconButtonProps } from '@material-ui/core/IconButton';\nimport { InputAdornmentProps } from '@material-ui/core/InputAdornment';\nimport { onSpaceOrEnter } from '../_helpers/utils';\nimport { ParsableDate } from '../constants/prop-types';\nimport { useUtils, MuiPickersAdapter } from './hooks/useUtils';\nimport { getDisplayDate, getTextFieldAriaText } from '../_helpers/text-field-helper';\n\nexport type MuiTextFieldProps = TextFieldProps | Omit<TextFieldProps, 'variant'>;\n\nexport interface DateInputProps<TInputValue = ParsableDate<unknown>, TDateValue = unknown> {\n  open: boolean;\n  rawValue: TInputValue;\n  inputFormat: string;\n  onChange: (date: TDateValue, keyboardInputValue?: string) => void;\n  openPicker: () => void;\n  readOnly?: boolean;\n  disabled?: boolean;\n  validationError?: boolean;\n  label?: TextFieldProps['label'];\n  InputProps?: TextFieldProps['InputProps'];\n  TextFieldProps?: Partial<MuiTextFieldProps>;\n  // lib/src/wrappers/DesktopPopperWrapper.tsx:87\n  onBlur?: () => void;\n  // ?? TODO when it will be possible to display \"empty\" date in datepicker use it instead of ignoring invalid inputs\n  ignoreInvalidInputs?: boolean;\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `props` argument of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api) that you need to forward.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example ```jsx\n   * renderInput={props => <TextField {...props} />}\n   * ````\n   */\n  renderInput: (props: MuiTextFieldProps) => React.ReactElement;\n  /**\n   * Icon displaying for open picker button.\n   */\n  openPickerIcon?: React.ReactNode;\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. __/__/____ __:__ or __/__/____ __:__ _M)\n   */\n  mask?: string;\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   *\n   * @default /\\dap/gi\n   */\n  acceptRegex?: RegExp;\n  /**\n   * Props to pass to keyboard input adornment.\n   *\n   * @type {Partial<InputAdornmentProps>}\n   */\n  InputAdornmentProps?: Partial<InputAdornmentProps>;\n  /**\n   * Props to pass to keyboard adornment button.\n   *\n   * @type {Partial<IconButtonProps>}\n   */\n  OpenPickerButtonProps?: Partial<IconButtonProps>;\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter?: (str: string) => string;\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   *\n   * @default false\n   */\n  disableOpenPicker?: boolean;\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   *\n   * @default false\n   */\n  disableMaskedInput?: boolean;\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   *\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText?: (value: ParsableDate, utils: MuiPickersAdapter) => string;\n}\n\nexport type ExportedDateInputProps<TInputValue, TDateValue> = Omit<\n  DateInputProps<TInputValue, TDateValue>,\n  | 'openPicker'\n  | 'inputValue'\n  | 'onChange'\n  | 'inputFormat'\n  | 'validationError'\n  | 'rawValue'\n  | 'forwardedRef'\n  | 'open'\n  | 'TextFieldProps'\n  | 'onBlur'\n>;\n\nexport interface DateInputRefs {\n  inputRef?: React.Ref<HTMLInputElement>;\n  containerRef?: React.Ref<HTMLDivElement>;\n  forwardedRef?: React.Ref<HTMLInputElement>;\n}\n\nexport const PureDateInput: React.FC<DateInputProps & DateInputRefs> = ({\n  containerRef,\n  disabled,\n  forwardedRef,\n  getOpenDialogAriaText = getTextFieldAriaText,\n  inputFormat,\n  InputProps,\n  label,\n  openPicker: onOpen,\n  rawValue,\n  renderInput,\n  TextFieldProps = {},\n  validationError,\n}) => {\n  const utils = useUtils();\n  const PureDateInputProps = React.useMemo(\n    () => ({\n      ...InputProps,\n      readOnly: true,\n    }),\n    [InputProps]\n  );\n\n  const inputValue = getDisplayDate(utils, rawValue, inputFormat);\n\n  return renderInput({\n    label,\n    disabled,\n    ref: containerRef,\n    inputRef: forwardedRef,\n    error: validationError,\n    InputProps: PureDateInputProps,\n    inputProps: {\n      disabled,\n      'aria-readonly': true,\n      'aria-label': getOpenDialogAriaText(rawValue, utils),\n      value: inputValue,\n      onClick: onOpen,\n      onKeyDown: onSpaceOrEnter(onOpen),\n    },\n    ...TextFieldProps,\n  });\n};\n\nPureDateInput.propTypes = {\n  acceptRegex: PropTypes.instanceOf(RegExp),\n  getOpenDialogAriaText: PropTypes.func,\n  mask: PropTypes.string,\n  OpenPickerButtonProps: PropTypes.object,\n  openPickerIcon: PropTypes.node,\n  renderInput: PropTypes.func.isRequired,\n  rifmFormatter: PropTypes.func,\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH, DIALOG_WIDTH_WIDER } from '../constants/dimensions';\n\nexport interface ExportedPickerModalProps {\n  /**\n   * \"OK\" button text.\n   *\n   * @default \"OK\"\n   */\n  okText?: React.ReactNode;\n  /**\n   * \"CANCEL\" Text message\n   *\n   * @default \"CANCEL\"\n   */\n  cancelText?: React.ReactNode;\n  /**\n   * \"CLEAR\" Text message\n   *\n   * @default \"CLEAR\"\n   */\n  clearText?: React.ReactNode;\n  /**\n   * \"TODAY\" Text message\n   *\n   * @default \"TODAY\"\n   */\n  todayText?: React.ReactNode;\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   *\n   * @default false\n   */\n  clearable?: boolean;\n  /**\n   * If `true`, the today button will be displayed. **Note** that `showClearButton` has a higher priority.\n   *\n   * @default false\n   */\n  showTodayButton?: boolean;\n  showTabs?: boolean;\n  wider?: boolean;\n}\n\nexport interface PickerModalDialogProps extends ExportedPickerModalProps, DialogProps {\n  onAccept: () => void;\n  onClear: () => void;\n  onDismiss: () => void;\n  onSetToday: () => void;\n}\n\nexport const useStyles = makeStyles(\n  {\n    dialogRoot: {\n      minWidth: DIALOG_WIDTH,\n    },\n    dialogRootWider: {\n      minWidth: DIALOG_WIDTH_WIDER,\n    },\n    dialogContainer: {\n      '&:focus > $dialogRoot': {\n        outline: 'auto',\n        '@media (pointer:coarse)': {\n          outline: 0,\n        },\n      },\n    },\n    dialog: {\n      '&:first-child': {\n        padding: 0,\n      },\n    },\n    dialogAction: {\n      // requested for overrides\n    },\n    withAdditionalAction: {\n      // set justifyContent to default value to fix IE11 layout bug\n      // see https://github.com/mui-org/material-ui-pickers/pull/267\n      justifyContent: 'flex-start',\n\n      '& > *:first-child': {\n        marginRight: 'auto',\n      },\n    },\n  },\n  { name: 'MuiPickersModalDialog' }\n);\n\nconst PickersModalDialog: React.FC<PickerModalDialogProps> = (props) => {\n  const {\n    cancelText = 'Cancel',\n    children,\n    classes: MuiDialogClasses,\n    clearable = false,\n    clearText = 'Clear',\n    okText = 'OK',\n    onAccept,\n    onClear,\n    onDismiss,\n    onSetToday,\n    showTabs,\n    showTodayButton = false,\n    todayText = 'Today',\n    wider,\n    ...other\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      onClose={onDismiss}\n      classes={{\n        container: classes.dialogContainer,\n        paper: clsx(classes.dialogRoot, {\n          [classes.dialogRootWider]: wider,\n        }),\n        ...MuiDialogClasses,\n      }}\n      {...other}\n    >\n      <DialogContent className={classes.dialog}>{children}</DialogContent>\n      <DialogActions\n        className={clsx(classes.dialogAction, {\n          [classes.withAdditionalAction]: clearable || showTodayButton,\n        })}\n      >\n        {clearable && (\n          <Button data-mui-test=\"clear-action-button\" color=\"primary\" onClick={onClear}>\n            {clearText}\n          </Button>\n        )}\n        {showTodayButton && (\n          <Button data-mui-test=\"today-action-button\" color=\"primary\" onClick={onSetToday}>\n            {todayText}\n          </Button>\n        )}\n        {cancelText && (\n          <Button color=\"primary\" onClick={onDismiss}>\n            {cancelText}\n          </Button>\n        )}\n        {okText && (\n          <Button color=\"primary\" onClick={onAccept}>\n            {okText}\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default PickersModalDialog;\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { DialogProps as MuiDialogProps } from '@material-ui/core/Dialog';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport PickersModalDialog, { ExportedPickerModalProps } from '../_shared/PickersModalDialog';\n\nexport interface InnerMobileWrapperProps extends ExportedPickerModalProps {\n  /**\n   * Props to be passed directly to material-ui Dialog\n   * @type {Partial<MuiDialogProps>}\n   */\n  DialogProps?: Partial<MuiDialogProps>;\n}\n\nexport interface MobileWrapperProps\n  extends InnerMobileWrapperProps,\n    WrapperProps,\n    Partial<InnerDesktopWrapperProps & StaticWrapperProps> {}\n\nexport const MobileWrapper: React.FC<MobileWrapperProps> = (props) => {\n  const {\n    cancelText,\n    children,\n    clearable,\n    clearText,\n    DateInputProps,\n    DialogProps,\n    displayStaticWrapperAs,\n    KeyboardDateInputComponent,\n    okText,\n    onAccept,\n    onClear,\n    onDismiss,\n    onSetToday,\n    open,\n    PopperProps,\n    PureDateInputComponent = PureDateInput,\n    showTabs,\n    showTodayButton,\n    todayText,\n    wider,\n    ...other\n  } = props;\n  return (\n    <WrapperVariantContext.Provider value=\"mobile\">\n      <PureDateInputComponent {...other} {...DateInputProps} />\n      <PickersModalDialog\n        wider={wider}\n        showTabs={showTabs}\n        open={open}\n        onClear={onClear}\n        onAccept={onAccept}\n        onDismiss={onDismiss}\n        onSetToday={onSetToday}\n        clearText={clearText}\n        todayText={todayText}\n        okText={okText}\n        cancelText={cancelText}\n        clearable={clearable}\n        showTodayButton={showTodayButton}\n        data-mui-test=\"mobile-wrapper-dialog\"\n        {...DialogProps}\n      >\n        {children}\n      </PickersModalDialog>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nMobileWrapper.propTypes = {\n  cancelText: PropTypes.node,\n  clearable: PropTypes.bool,\n  clearText: PropTypes.node,\n  DialogProps: PropTypes.object,\n  okText: PropTypes.node,\n  showTodayButton: PropTypes.bool,\n  todayText: PropTypes.node,\n};\n","import * as React from 'react';\nimport clsx from 'clsx';\nimport Grow from '@material-ui/core/Grow';\nimport Paper, { PaperProps } from '@material-ui/core/Paper';\nimport Popper, { PopperProps } from '@material-ui/core/Popper';\nimport TrapFocus, { TrapFocusProps } from '@material-ui/core/Unstable_TrapFocus';\nimport { useForkRef } from '@material-ui/core/utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { useGlobalKeyDown, keycode } from './hooks/useKeyDown';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\n\nexport interface ExportedPickerPopperProps {\n  /**\n   * Popper props passed down to [Popper](https://material-ui.com/api/popper/) component.\n   */\n  PopperProps?: Partial<PopperProps>;\n  /**\n   * Custom component for [Transition](https://material-ui.com/components/transitions/#transitioncomponent-prop).\n   */\n  TransitionComponent?: React.ComponentType<TransitionProps>;\n}\n\nexport interface PickerPopperProps extends ExportedPickerPopperProps, PaperProps {\n  role: 'tooltip' | 'dialog';\n  TrapFocusProps?: Partial<TrapFocusProps>;\n  anchorEl: PopperProps['anchorEl'];\n  open: PopperProps['open'];\n  onClose: () => void;\n  onOpen: () => void;\n}\n\nexport const useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      zIndex: theme.zIndex.modal,\n    },\n    paper: {\n      transformOrigin: 'top center',\n      '&:focus': {\n        [IS_TOUCH_DEVICE_MEDIA]: {\n          outline: 0,\n        },\n      },\n    },\n    topTransition: {\n      transformOrigin: 'bottom center',\n    },\n  }),\n  { name: 'MuiPickersPopper' }\n);\n\nexport const PickersPopper: React.FC<PickerPopperProps> = (props) => {\n  const {\n    anchorEl,\n    children,\n    innerRef = null,\n    onClose,\n    onOpen,\n    open,\n    PopperProps,\n    role,\n    TransitionComponent = Grow,\n    TrapFocusProps,\n  } = props;\n  const classes = useStyles();\n  const paperRef = React.useRef<HTMLElement>(null);\n  const handlePopperRef = useForkRef(paperRef, innerRef);\n  const lastFocusedElementRef = React.useRef<Element | null>(null);\n  const popperOptions = React.useMemo(() => ({ onCreate: onOpen }), [onOpen]);\n\n  useGlobalKeyDown(open, {\n    [keycode.Esc]: onClose,\n  });\n\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (\n      lastFocusedElementRef.current &&\n      lastFocusedElementRef.current instanceof HTMLElement\n    ) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n\n  const handleBlur = () => {\n    if (!open) {\n      return;\n    }\n\n    // document.activeElement is updating on the next tick after `blur` called\n    executeInTheNextEventLoopTick(() => {\n      if (paperRef.current?.contains(document.activeElement)) {\n        return;\n      }\n\n      onClose();\n    });\n  };\n\n  return (\n    <Popper\n      transition\n      role={role}\n      open={open}\n      anchorEl={anchorEl}\n      className={clsx(classes.root, PopperProps?.className)}\n      popperOptions={popperOptions}\n      {...PopperProps}\n    >\n      {({ TransitionProps, placement }) => (\n        <TrapFocus\n          open={open}\n          disableAutoFocus\n          disableEnforceFocus={role === 'tooltip'}\n          isEnabled={() => true}\n          getDoc={() => paperRef.current?.ownerDocument ?? document}\n          {...TrapFocusProps}\n        >\n          <TransitionComponent {...TransitionProps}>\n            <Paper\n              tabIndex={-1}\n              elevation={8}\n              ref={handlePopperRef}\n              className={clsx(classes.paper, {\n                [classes.topTransition]: placement === 'top',\n              })}\n              onBlur={handleBlur}\n            >\n              {children}\n            </Paper>\n          </TransitionComponent>\n        </TrapFocus>\n      )}\n    </Popper>\n  );\n};\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { InnerDesktopTooltipWrapperProps } from './DesktopTooltipWrapper';\nimport { PickersPopper, ExportedPickerPopperProps } from '../_shared/PickersPopper';\nimport { CanAutoFocusContext, useAutoFocusControl } from '../_shared/hooks/useCanAutoFocus';\n\nexport interface InnerDesktopWrapperProps extends ExportedPickerPopperProps {}\n\nexport interface DesktopWrapperProps\n  extends InnerDesktopWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & InnerDesktopTooltipWrapperProps & StaticWrapperProps> {}\n\nexport const DesktopWrapper: React.FC<DesktopWrapperProps> = (props) => {\n  const {\n    children,\n    DateInputProps,\n    KeyboardDateInputComponent = KeyboardDateInput,\n    onDismiss,\n    open,\n    PopperProps,\n    TransitionComponent,\n  } = props;\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const { canAutoFocus, onOpen } = useAutoFocusControl(open);\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <CanAutoFocusContext.Provider value={canAutoFocus}>\n        <KeyboardDateInputComponent {...DateInputProps} inputRef={inputRef} />\n        <PickersPopper\n          role=\"dialog\"\n          open={open}\n          anchorEl={inputRef.current}\n          TransitionComponent={TransitionComponent}\n          PopperProps={PopperProps}\n          onClose={onDismiss}\n          onOpen={onOpen}\n        >\n          {children}\n        </PickersPopper>\n      </CanAutoFocusContext.Provider>\n    </WrapperVariantContext.Provider>\n  );\n};\n\nDesktopWrapper.propTypes = {\n  onOpen: PropTypes.func,\n  onClose: PropTypes.func,\n} as any;\n","import * as React from 'react';\nimport { WrapperProps } from './Wrapper';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { InnerMobileWrapperProps } from './MobileWrapper';\nimport { InnerDesktopWrapperProps } from './DesktopWrapper';\nimport { WrapperVariantContext } from './WrapperVariantContext';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { executeInTheNextEventLoopTick } from '../_helpers/utils';\nimport { ExportedPickerPopperProps, PickersPopper } from '../_shared/PickersPopper';\nimport { CanAutoFocusContext, useAutoFocusControl } from '../_shared/hooks/useCanAutoFocus';\n\nexport interface InnerDesktopTooltipWrapperProps extends ExportedPickerPopperProps {}\n\nexport interface DesktopTooltipWrapperProps\n  extends InnerDesktopTooltipWrapperProps,\n    WrapperProps,\n    Partial<InnerMobileWrapperProps & StaticWrapperProps & InnerDesktopWrapperProps> {}\n\nexport const DesktopTooltipWrapper: React.FC<DesktopTooltipWrapperProps> = (props) => {\n  const {\n    open,\n    children,\n    PopperProps,\n    onDismiss,\n    DateInputProps,\n    TransitionComponent,\n    KeyboardDateInputComponent = KeyboardDateInput,\n  } = props;\n  const inputRef = React.useRef<HTMLDivElement>(null);\n  const popperRef = React.useRef<HTMLElement>(null);\n  const { canAutoFocus, onOpen } = useAutoFocusControl(open);\n\n  const handleBlur = () => {\n    executeInTheNextEventLoopTick(() => {\n      if (\n        inputRef.current?.contains(document.activeElement) ||\n        popperRef.current?.contains(document.activeElement)\n      ) {\n        return;\n      }\n\n      onDismiss();\n    });\n  };\n\n  return (\n    <WrapperVariantContext.Provider value=\"desktop\">\n      <CanAutoFocusContext.Provider value={canAutoFocus}>\n        <KeyboardDateInputComponent\n          {...DateInputProps}\n          containerRef={inputRef}\n          onBlur={handleBlur}\n        />\n        <PickersPopper\n          role=\"tooltip\"\n          open={open}\n          innerRef={popperRef}\n          anchorEl={inputRef.current}\n          TransitionComponent={TransitionComponent}\n          PopperProps={PopperProps}\n          onBlur={handleBlur}\n          onClose={onDismiss}\n          onOpen={onOpen}\n        >\n          {children}\n        </PickersPopper>\n      </CanAutoFocusContext.Provider>\n    </WrapperVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { IS_TOUCH_DEVICE_MEDIA } from '../constants/dimensions';\nimport { MobileWrapperProps, MobileWrapper } from './MobileWrapper';\nimport { DesktopWrapperProps, DesktopWrapper } from './DesktopWrapper';\nimport { DesktopTooltipWrapperProps, DesktopTooltipWrapper } from './DesktopTooltipWrapper';\n\nexport interface ResponsiveWrapperProps\n  extends DesktopWrapperProps,\n    DesktopTooltipWrapperProps,\n    MobileWrapperProps {\n  /**\n   * CSS media query when `Mobile` mode will be changed to `Desktop`.\n   *\n   * @default \"@media (pointer: fine)\"\n   * @example \"@media (min-width: 720px)\" or theme.breakpoints.up(\"sm\")\n   */\n  desktopModeMediaQuery?: string;\n}\n\nexport const makeResponsiveWrapper = (\n  DesktopWrapperComponent: React.FC<DesktopWrapperProps | DesktopTooltipWrapperProps>,\n  MobileWrapperComponent: React.FC<MobileWrapperProps>\n) => {\n  const ResponsiveWrapper: React.FC<ResponsiveWrapperProps> = ({\n    cancelText,\n    clearable,\n    clearText,\n    desktopModeMediaQuery = IS_TOUCH_DEVICE_MEDIA,\n    DialogProps,\n    displayStaticWrapperAs,\n    okText,\n    PopperProps,\n    showTodayButton,\n    todayText,\n    TransitionComponent,\n    ...other\n  }) => {\n    const isDesktop = useMediaQuery(desktopModeMediaQuery);\n\n    return isDesktop ? (\n      <DesktopWrapperComponent\n        PopperProps={PopperProps}\n        TransitionComponent={TransitionComponent}\n        {...other}\n      />\n    ) : (\n      <MobileWrapperComponent\n        okText={okText}\n        cancelText={cancelText}\n        clearText={clearText}\n        todayText={todayText}\n        showTodayButton={showTodayButton}\n        clearable={clearable}\n        DialogProps={DialogProps}\n        {...other}\n      />\n    );\n  };\n\n  return ResponsiveWrapper;\n};\n\nexport const ResponsiveWrapper = makeResponsiveWrapper(DesktopWrapper, MobileWrapper);\n\nexport const ResponsiveTooltipWrapper = makeResponsiveWrapper(DesktopTooltipWrapper, MobileWrapper);\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DIALOG_WIDTH } from '../constants/dimensions';\nimport { WrapperVariantContext, IsStaticVariantContext } from './WrapperVariantContext';\n\nconst useStyles = makeStyles(\n  (theme) => ({\n    root: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper,\n    },\n  }),\n  { name: 'MuiPickersStaticWrapper' }\n);\n\nexport interface StaticWrapperProps {\n  /**\n   * Force static wrapper inner components to be rendered in mobile or desktop mode\n   *\n   * @default \"static\"\n   */\n  displayStaticWrapperAs?: 'desktop' | 'mobile' | 'static';\n}\n\nexport const StaticWrapper: React.FC<StaticWrapperProps> = (props) => {\n  const { displayStaticWrapperAs = 'static', children } = props;\n  const classes = useStyles();\n  const isStatic = true;\n\n  return (\n    <IsStaticVariantContext.Provider value={isStatic}>\n      <WrapperVariantContext.Provider value={displayStaticWrapperAs}>\n        <div className={classes.root}>{children}</div>\n      </WrapperVariantContext.Provider>\n    </IsStaticVariantContext.Provider>\n  );\n};\n","import * as React from 'react';\nimport { useUtils, MuiPickersAdapter } from './useUtils';\n\nexport interface ValidationProps<TError, TDateValue> {\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError?: (reason: TError, value: TDateValue) => void;\n}\n\nexport interface ValidationHookOptions<TError> {\n  defaultValidationError?: TError;\n  isSameError?: (a: TError, b: TError) => boolean;\n}\n\nconst defaultIsSameError = (a: unknown, b: unknown) => a === b;\n\nexport function makeValidationHook<\n  TError,\n  TDateValue,\n  TProps extends ValidationProps<TError, TDateValue>\n>(\n  validateFn: (utils: MuiPickersAdapter, value: TDateValue, props: TProps) => TError,\n  { defaultValidationError, isSameError = defaultIsSameError }: ValidationHookOptions<TError> = {}\n) {\n  return (value: TDateValue, props: TProps) => {\n    const utils = useUtils();\n    const previousValidationErrorRef = React.useRef<TError>(\n      defaultValidationError || null\n    ) as React.MutableRefObject<TError>;\n\n    const validationError = validateFn(utils, value, props);\n\n    React.useEffect(() => {\n      if (props.onError && !isSameError(validationError, previousValidationErrorRef.current)) {\n        props.onError(validationError, value);\n      }\n\n      previousValidationErrorRef.current = validationError;\n    }, [previousValidationErrorRef, props, validationError, value]);\n\n    return validationError;\n  };\n}\n","import * as React from 'react';\nimport { MuiPickersAdapter } from './hooks/useUtils';\nimport { MuiPickersAdapterContext } from '../LocalizationProvider';\n\nexport interface WithDateAdapterProps<TDate> {\n  /**\n   * Allows to pass configured date-io adapter directly. More info [here](https://next.material-ui-pickers.dev/guides/date-adapter-passing)\n   * ```jsx\n   * dateAdapter={new DateFnsAdapter({ locale: ruLocale })}\n   * ```\n   */\n  dateAdapter?: MuiPickersAdapter<TDate>;\n}\n\nexport function withDateAdapterProp<TProps>(\n  Component: React.ComponentType<TProps>\n): React.FC<TProps & WithDateAdapterProps<unknown>> {\n  return ({ dateAdapter, ...other }: TProps & WithDateAdapterProps<unknown>) => {\n    if (dateAdapter) {\n      return (\n        <MuiPickersAdapterContext.Provider value={dateAdapter}>\n          <Component {...(other as TProps)} />\n        </MuiPickersAdapterContext.Provider>\n      );\n    }\n    return <Component {...(other as TProps)} />;\n  };\n}\n","import React from 'react';\nimport { StaticWrapperProps } from './StaticWrapper';\nimport { BasePickerProps } from '../typings/BasePicker';\nimport { DateInputProps } from '../_shared/PureDateInput';\nimport { ResponsiveWrapperProps } from './ResponsiveWrapper';\nimport { OmitInnerWrapperProps, SomeWrapper, WrapperProps, DateInputPropsLike } from './Wrapper';\n\ninterface MakePickerOptions<TInputProps> {\n  PureDateInputComponent?: React.FC<TInputProps>;\n  KeyboardDateInputComponent?: React.FC<TInputProps>;\n}\n\ninterface WithWrapperProps<TInputProps = DateInputProps> {\n  children: React.ReactNode;\n  DateInputProps: TInputProps;\n  wrapperProps: Omit<WrapperProps, 'DateInputProps'>;\n}\n\n/* Creates a component that rendering modal/popover/nothing and spreading props down to text field */\nexport function makeWrapperComponent<\n  TInputProps extends DateInputPropsLike<any, any>,\n  TWrapper extends SomeWrapper = any\n>(\n  Wrapper: TWrapper,\n  { KeyboardDateInputComponent, PureDateInputComponent }: MakePickerOptions<TInputProps>\n) {\n  function WrapperComponent(\n    props: Partial<BasePickerProps<any, any>> &\n      WithWrapperProps<TInputProps> &\n      Partial<OmitInnerWrapperProps<ResponsiveWrapperProps> & StaticWrapperProps>\n  ) {\n    const {\n      disableCloseOnSelect,\n      cancelText,\n      children,\n      clearable,\n      clearText,\n      DateInputProps,\n      DialogProps,\n      displayStaticWrapperAs,\n      inputFormat,\n      okText,\n      onAccept,\n      onChange,\n      onClose,\n      onOpen,\n      open,\n      PopperProps,\n      showTabs,\n      todayText,\n      value,\n      wider,\n      wrapperProps,\n      ...restPropsForTextField\n    } = props;\n\n    const WrapperComponent = Wrapper as SomeWrapper;\n\n    return (\n      <WrapperComponent\n        clearable={clearable}\n        clearText={clearText}\n        DialogProps={DialogProps}\n        PopperProps={PopperProps}\n        okText={okText}\n        todayText={todayText}\n        cancelText={cancelText}\n        DateInputProps={DateInputProps}\n        // @ts-ignore\n        KeyboardDateInputComponent={KeyboardDateInputComponent}\n        // @ts-ignore\n        PureDateInputComponent={PureDateInputComponent}\n        wider={wider}\n        showTabs={showTabs}\n        displayStaticWrapperAs={displayStaticWrapperAs}\n        {...wrapperProps}\n        {...restPropsForTextField}\n      >\n        {children}\n      </WrapperComponent>\n    );\n  }\n\n  return WrapperComponent;\n}\n","import * as React from 'react';\nimport { BasePickerProps } from '../../typings/BasePicker';\n\nexport function useOpenState({ open, onOpen, onClose }: BasePickerProps<any, any>) {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [openState, setIsOpenState] = React.useState(false);\n\n  // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n\n      setIsOpenState(open);\n    }\n  }, [isControllingOpenProp, open]);\n\n  const setIsOpen = React.useCallback(\n    (newIsOpen: boolean) => {\n      if (!isControllingOpenProp) {\n        setIsOpenState(newIsOpen);\n      }\n\n      return newIsOpen ? onOpen && onOpen() : onClose && onClose();\n    },\n    [isControllingOpenProp, onOpen, onClose]\n  );\n\n  return { isOpen: openState, setIsOpen };\n}\n","import * as React from 'react';\nimport { useOpenState } from './useOpenState';\nimport { WrapperVariant } from '../../wrappers/Wrapper';\nimport { BasePickerProps } from '../../typings/BasePicker';\nimport { useUtils, useNow, MuiPickersAdapter } from './useUtils';\n\nexport interface PickerStateValueManager<TInput, TDateValue> {\n  parseInput: (utils: MuiPickersAdapter, props: BasePickerProps<TInput, TDateValue>) => TDateValue;\n  emptyValue: TDateValue;\n  areValuesEqual: (\n    utils: MuiPickersAdapter,\n    valueLeft: TDateValue,\n    valueRight: TDateValue\n  ) => boolean;\n}\n\nexport type PickerSelectionState = 'partial' | 'shallow' | 'finish';\n\nexport function usePickerState<TInput, TDateValue>(\n  props: BasePickerProps<TInput, TDateValue>,\n  valueManager: PickerStateValueManager<TInput, TDateValue>\n) {\n  const {\n    inputFormat,\n    disabled,\n    readOnly,\n    onAccept,\n    onChange,\n    disableCloseOnSelect,\n    value,\n  } = props;\n\n  if (!inputFormat) {\n    throw new Error('inputFormat prop is required');\n  }\n\n  const now = useNow();\n  const utils = useUtils();\n  const { isOpen, setIsOpen } = useOpenState(props);\n  const [pickerDate, setPickerDate] = React.useState(valueManager.parseInput(utils, props));\n\n  // Mobile keyboard view is a special case.\n  // When it's open picker should work like closed, cause we are just showing text field\n  const [isMobileKeyboardViewOpen, setMobileKeyboardViewOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const parsedDateValue = valueManager.parseInput(utils, props);\n    setPickerDate((currentPickerDate) => {\n      if (!valueManager.areValuesEqual(utils, currentPickerDate, parsedDateValue)) {\n        return parsedDateValue;\n      }\n\n      return currentPickerDate;\n    });\n    // We need to react only on value change, because `date` could potentially return new Date() on each render\n  }, [value, utils]); // eslint-disable-line\n\n  const acceptDate = React.useCallback(\n    (acceptedDate: TDateValue, needClosePicker: boolean) => {\n      onChange(acceptedDate);\n\n      if (needClosePicker) {\n        setIsOpen(false);\n\n        if (onAccept) {\n          onAccept(acceptedDate);\n        }\n      }\n    },\n    [onAccept, onChange, setIsOpen]\n  );\n\n  const wrapperProps = React.useMemo(\n    () => ({\n      open: isOpen,\n      onClear: () => acceptDate(valueManager.emptyValue, true),\n      onAccept: () => acceptDate(pickerDate, true),\n      onDismiss: () => setIsOpen(false),\n      onSetToday: () => {\n        // TODO FIX ME\n        setPickerDate(now as any);\n        acceptDate(now as any, !disableCloseOnSelect);\n      },\n    }),\n    [acceptDate, disableCloseOnSelect, isOpen, now, pickerDate, setIsOpen, valueManager.emptyValue]\n  );\n\n  const pickerProps = React.useMemo(\n    () => ({\n      // canAutoFocus,\n      date: pickerDate,\n      isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: () => {\n        if (!isMobileKeyboardViewOpen) {\n          // accept any partial input done by React.user\n          setPickerDate(pickerDate);\n        }\n\n        setMobileKeyboardViewOpen(!isMobileKeyboardViewOpen);\n      },\n      onDateChange: (\n        newDate: TDateValue,\n        wrapperVariant: WrapperVariant,\n        selectionState: PickerSelectionState = 'partial'\n      ) => {\n        setPickerDate(newDate);\n        if (selectionState === 'partial') {\n          acceptDate(newDate, false);\n        }\n\n        if (selectionState === 'finish') {\n          const shouldCloseOnSelect = !(disableCloseOnSelect ?? wrapperVariant === 'mobile');\n          acceptDate(newDate, shouldCloseOnSelect);\n        }\n\n        // if selectionState === \"shallow\" do nothing (we already update picker state)\n      },\n    }),\n    [acceptDate, disableCloseOnSelect, isMobileKeyboardViewOpen, pickerDate]\n  );\n\n  const inputProps = React.useMemo(\n    () => ({\n      onChange,\n      inputFormat,\n      open: isOpen,\n      rawValue: value,\n      openPicker: () => !readOnly && !disabled && setIsOpen(true),\n    }),\n    [onChange, inputFormat, isOpen, value, readOnly, disabled, setIsOpen]\n  );\n\n  const pickerState = { pickerProps, inputProps, wrapperProps };\n  React.useDebugValue(pickerState, () => ({\n    MuiPickerState: {\n      pickerDate,\n      other: pickerState,\n    },\n  }));\n\n  return pickerState;\n}\n","import * as React from 'react';\nimport Picker, { ExportedPickerProps } from './Picker';\nimport { ParsableDate } from '../constants/prop-types';\nimport { MuiPickersAdapter } from '../_shared/hooks/useUtils';\nimport { parsePickerInputValue } from '../_helpers/date-utils';\nimport { withDefaultProps } from '../_shared/withDefaultProps';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { SomeWrapper, ExtendWrapper } from '../wrappers/Wrapper';\nimport { ResponsiveWrapper } from '../wrappers/ResponsiveWrapper';\nimport { withDateAdapterProp } from '../_shared/withDateAdapterProp';\nimport { makeWrapperComponent } from '../wrappers/makeWrapperComponent';\nimport { PureDateInput, DateInputProps } from '../_shared/PureDateInput';\nimport { usePickerState, PickerStateValueManager } from '../_shared/hooks/usePickerState';\nimport { AnyPickerView, AllSharedPickerProps, ToolbarComponentProps } from './SharedPickerProps';\n\ntype AllAvailableForOverrideProps = ExportedPickerProps<AnyPickerView>;\n\nexport type AllPickerProps<T, TWrapper extends SomeWrapper = SomeWrapper> = T &\n  AllSharedPickerProps &\n  ExtendWrapper<TWrapper>;\n\nexport interface MakePickerOptions<T extends unknown> {\n  name: string;\n  /**\n   * Hook that running validation for the `value` and input.\n   */\n  useValidation: (value: ParsableDate<unknown>, props: T) => string | null;\n  /**\n   * Intercept props to override or inject default props specifically for picker.\n   */\n  useInterceptProps: (props: AllPickerProps<T>) => AllPickerProps<T> & { inputFormat: string };\n  DefaultToolbarComponent: React.ComponentType<ToolbarComponentProps>;\n}\n\nconst valueManager: PickerStateValueManager<unknown, unknown> = {\n  emptyValue: null,\n  parseInput: parsePickerInputValue,\n  areValuesEqual: (utils: MuiPickersAdapter, a: unknown, b: unknown) => utils.isEqual(a, b),\n};\n\ntype PickerComponent<\n  TViewProps extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper\n> = <TDate>(\n  props: TViewProps &\n    ExtendWrapper<TWrapper> &\n    AllSharedPickerProps<ParsableDate<TDate>, TDate | null> &\n    React.RefAttributes<HTMLInputElement>\n) => JSX.Element;\n\nexport function makePickerWithStateAndWrapper<\n  T extends AllAvailableForOverrideProps,\n  TWrapper extends SomeWrapper = typeof ResponsiveWrapper\n>(\n  Wrapper: TWrapper,\n  { name, useInterceptProps, useValidation, DefaultToolbarComponent }: MakePickerOptions<T>\n): PickerComponent<T, TWrapper> {\n  const WrapperComponent = makeWrapperComponent<DateInputProps<any, any>>(Wrapper, {\n    KeyboardDateInputComponent: KeyboardDateInput,\n    PureDateInputComponent: PureDateInput,\n  });\n\n  function PickerWithState<TDate>(\n    __props: T & AllSharedPickerProps<ParsableDate<TDate>, TDate> & ExtendWrapper<TWrapper>\n  ) {\n    const allProps = useInterceptProps(__props) as AllPickerProps<T, TWrapper>;\n\n    const validationError = useValidation(allProps.value, allProps) !== null;\n    const { pickerProps, inputProps, wrapperProps } = usePickerState<ParsableDate<TDate>, TDate>(\n      allProps,\n      valueManager as PickerStateValueManager<ParsableDate<TDate>, TDate>\n    );\n\n    // Note that we are passing down all the value without spread.\n    // It saves us >1kb gzip and make any prop available automatically on any level down.\n    const { value, onChange, ...other } = allProps;\n    const AllDateInputProps = { ...inputProps, ...other, validationError };\n\n    return (\n      <WrapperComponent wrapperProps={wrapperProps} DateInputProps={AllDateInputProps} {...other}>\n        <Picker\n          {...pickerProps}\n          toolbarTitle={allProps.label || allProps.toolbarTitle}\n          ToolbarComponent={other.ToolbarComponent || DefaultToolbarComponent}\n          DateInputProps={AllDateInputProps}\n          {...other}\n        />\n      </WrapperComponent>\n    );\n  }\n\n  const FinalPickerComponent = withDefaultProps({ name }, withDateAdapterProp(PickerWithState));\n\n  // @ts-ignore Simply ignore generic values in props, because it is impossible\n  // to keep generics without additional cast when using forwardRef\n  // @see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/35834\n  return React.forwardRef<HTMLInputElement, React.ComponentProps<typeof FinalPickerComponent>>(\n    (props, ref) => <FinalPickerComponent {...(props as any)} forwardedRef={ref} />\n  );\n}\n"],"names":["PureDateInput","containerRef","disabled","forwardedRef","getOpenDialogAriaText","getTextFieldAriaText","inputFormat","InputProps","label","onOpen","openPicker","rawValue","renderInput","TextFieldProps","validationError","utils","useUtils","PureDateInputProps","React","readOnly","inputValue","getDisplayDate","ref","inputRef","error","inputProps","value","onClick","onKeyDown","onSpaceOrEnter","propTypes","acceptRegex","PropTypes","RegExp","mask","OpenPickerButtonProps","openPickerIcon","isRequired","rifmFormatter","useStyles","makeStyles","dialogRoot","minWidth","DIALOG_WIDTH","dialogRootWider","DIALOG_WIDTH_WIDER","dialogContainer","outline","dialog","padding","dialogAction","withAdditionalAction","justifyContent","marginRight","name","PickersModalDialog","props","cancelText","children","MuiDialogClasses","classes","clearable","clearText","okText","onAccept","onClear","onDismiss","onSetToday","showTabs","showTodayButton","todayText","wider","other","React.createElement","container","paper","clsx","MobileWrapper","DateInputProps","DialogProps","displayStaticWrapperAs","KeyboardDateInputComponent","open","PopperProps","PureDateInputComponent","theme","root","zIndex","modal","transformOrigin","IS_TOUCH_DEVICE_MEDIA","topTransition","PickersPopper","anchorEl","innerRef","onClose","role","TransitionComponent","Grow","TrapFocusProps","paperRef","handlePopperRef","useForkRef","lastFocusedElementRef","popperOptions","onCreate","useGlobalKeyDown","keycode","Esc","current","document","activeElement","HTMLElement","focus","handleBlur","executeInTheNextEventLoopTick","contains","className","TransitionProps","placement","ownerDocument","DesktopWrapper","KeyboardDateInput","useAutoFocusControl","canAutoFocus","DesktopTooltipWrapper","popperRef","makeResponsiveWrapper","DesktopWrapperComponent","MobileWrapperComponent","ResponsiveWrapper","desktopModeMediaQuery","isDesktop","useMediaQuery","ResponsiveTooltipWrapper","overflow","display","flexDirection","backgroundColor","palette","background","StaticWrapper","isStatic","defaultIsSameError","a","b","makeValidationHook","validateFn","defaultValidationError","isSameError","previousValidationErrorRef","onError","withDateAdapterProp","Component","dateAdapter","makeWrapperComponent","Wrapper","WrapperComponent","disableCloseOnSelect","onChange","wrapperProps","restPropsForTextField","useOpenState","isControllingOpenProp","openState","setIsOpenState","Error","setIsOpen","newIsOpen","isOpen","usePickerState","valueManager","now","useNow","parseInput","pickerDate","setPickerDate","isMobileKeyboardViewOpen","setMobileKeyboardViewOpen","parsedDateValue","currentPickerDate","areValuesEqual","acceptDate","acceptedDate","needClosePicker","emptyValue","pickerProps","date","toggleMobileKeyboardView","onDateChange","newDate","wrapperVariant","selectionState","shouldCloseOnSelect","pickerState","MuiPickerState","parsePickerInputValue","isEqual","makePickerWithStateAndWrapper","useInterceptProps","useValidation","DefaultToolbarComponent","PickerWithState","__props","allProps","AllDateInputProps","toolbarTitle","ToolbarComponent","FinalPickerComponent","withDefaultProps"],"mappings":"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"}