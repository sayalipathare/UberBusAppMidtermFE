import * as React from 'react';
import { PickerOnChangeFn } from '../../_shared/hooks/useViews';
export interface ExportedYearSelectionProps {
    /**
     * Callback firing on year change @DateIOType.
     */
    onYearChange?: (date: unknown) => void;
    /**
     * Disable specific years dynamically.
     * Works like `shouldDisableDate` but for year selection view. @DateIOType.
     */
    shouldDisableYear?: (day: unknown) => boolean;
}
export interface YearSelectionProps extends ExportedYearSelectionProps {
    allowKeyboardControl?: boolean;
    changeFocusedDay: (day: unknown) => void;
    date: unknown;
    disableFuture?: boolean | null | undefined;
    disablePast?: boolean | null | undefined;
    isDateDisabled: (day: unknown) => boolean;
    maxDate: unknown;
    minDate: unknown;
    onChange: PickerOnChangeFn;
}
export declare const useStyles: (props?: any) => Record<"root", string>;
export declare const YearSelection: React.FC<YearSelectionProps>;
