"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useStateForModelWithValidation = exports.getErrors = void 0;
var React = __importStar(require("react"));
var useEffectWithDebounce_1 = require("./useEffectWithDebounce");
function getErrors(getter, validation) {
    return Object.keys(getter).reduce(function (last, current) {
        last[current] = validation(current, getter[current], getter);
        return last;
    }, {});
}
exports.getErrors = getErrors;
function useStateForModelWithValidation(initialValue, validation, debounce) {
    if (debounce === void 0) { debounce = 100; }
    var _a = React.useState(initialValue), getter = _a[0], setter = _a[1];
    var _b = React.useState(getErrors(getter, validation)), errors = _b[0], setErrors = _b[1];
    var handleChange = function (event) {
        var _a;
        if (event.target) {
            var _b = event.target, name_1 = _b.name, value = _b.value;
            setter(__assign(__assign({}, getter), (_a = {}, _a[name_1] = value, _a)));
        }
        else {
            setter(__assign(__assign({}, getter), event));
        }
    };
    useEffectWithDebounce_1.useEffectWithDebounce(function () { return setErrors(getErrors(getter, validation)); }, debounce, [getter]);
    var validateAndSetErrors = function (e) {
        if (e) {
            setErrors(e);
        }
    };
    return [getter, handleChange, !Object.keys(errors).some(function (x) { return errors[x]; }), errors, validateAndSetErrors];
}
exports.useStateForModelWithValidation = useStateForModelWithValidation;
