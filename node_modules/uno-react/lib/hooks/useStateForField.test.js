"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_hooks_1 = require("@testing-library/react-hooks");
var useStateForField_1 = require("./useStateForField");
test('should keep the value of a variable that is related to an input(event)', function () {
    var result = react_hooks_1.renderHook(function () { return useStateForField_1.useStateForField(''); }).result;
    var event = {
        target: { value: 'the-value' },
    };
    react_hooks_1.act(function () {
        result.current[1](event);
    });
    expect(result.current[0]).toBe(event.target.value);
});
test('should set a value of a variable that is related to an input(event) and reset to defaultValue', function () {
    var defaultValue = '';
    var result = react_hooks_1.renderHook(function () { return useStateForField_1.useStateForField(defaultValue); }).result;
    var event = {
        target: { value: 'the-value' },
    };
    react_hooks_1.act(function () {
        result.current[1](event);
    });
    react_hooks_1.act(function () {
        result.current[2](defaultValue);
    });
    expect(result.current[0]).toBe(defaultValue);
});
test('should not keep the value of a variable that is not related to an input(event)', function () {
    var defaultValue = '';
    var result = react_hooks_1.renderHook(function () { return useStateForField_1.useStateForField(defaultValue); }).result;
    var event = {
        bubbles: false,
    };
    react_hooks_1.act(function () {
        result.current[1](event);
    });
    expect(result.current[0]).toBe(defaultValue);
});
