import { ActionsUnion } from './actionHelpers';
import { ColumnModel } from 'tubular-common';
export declare const START_REQUEST = "start request";
export declare const REQUEST_SUCCESS = "request success";
export declare const REQUEST_ERROR = "request error";
export declare const GOTO_PAGE = "goto page";
export declare const SET_COLUMNS = "set columns";
export declare const UPDATE_ITEMS_PER_PAGE = "update items per page";
export declare const UPDATE_SEARCH_TEXT = "update search text";
export declare const INIT_GRID_FROM_STORAGE = "init grid from storage";
export declare const actions: {
    startRequest: () => import("./actionHelpers").IAction<"start request">;
    goToPage: (payload: number) => import("./actionHelpers").IActionWithPayload<"goto page", number>;
    requestDone: (payload: {
        page: number;
        columns: ColumnModel[];
        searchText: string;
        aggregate: any;
        data: any[];
        filteredRecordCount: number;
        totalRecordCount: number;
        error: Error;
    }) => import("./actionHelpers").IActionWithPayload<"request success", {
        page: number;
        columns: ColumnModel[];
        searchText: string;
        aggregate: any;
        data: any[];
        filteredRecordCount: number;
        totalRecordCount: number;
        error: Error;
    }>;
    requestError: (payload: Error) => import("./actionHelpers").IActionWithPayload<"request error", Error>;
    setColumns: (payload: ColumnModel[]) => import("./actionHelpers").IActionWithPayload<"set columns", ColumnModel[]>;
    updateItemsPerPage: (payload: number) => import("./actionHelpers").IActionWithPayload<"update items per page", number>;
    updateSearchText: (payload: string) => import("./actionHelpers").IActionWithPayload<"update search text", string>;
    initGridFromStorage: (payload: {
        columns: ColumnModel[];
        page: number;
        searchText: string;
    }) => import("./actionHelpers").IActionWithPayload<"init grid from storage", {
        columns: ColumnModel[];
        page: number;
        searchText: string;
    }>;
};
export declare type Actions = ActionsUnion<typeof actions>;
